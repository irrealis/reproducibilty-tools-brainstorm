# Based on NixOS-18.03.
FROM nixos/nix:2.0

# Workaround problem where /etc/profile.d/nix.sh doesn't run if USER is unset.
ENV USER "root"

# NIX_PROFILES_DIR: for setting LOCALE_ARCHIVE, and in $SCIF_BASE/scif_nix.sh to find nix-env.
ENV NIX_PROFILES_DIR /nix/var/nix/profiles

# The following locale info is required by pipenv with Python 3.
ENV LOCALE_ARCHIVE "${NIX_PROFILES_DIR}/default/lib/locale/locale-archive"
ENV LANG en_US.utf8
ENV LC_ALL en_US.utf8

# Set SCIF_BASE (to SCIF default) so it can be used to set the WORKDIR variable below.
ENV SCIF_BASE /scif
# This sets up pipenv to place Python virtual environments beneath each SCIF app's root.
ENV PIPENV_VENV_IN_PROJECT true

# Normally the next two variables would point to /bin/bash, but Nix only has /bin/sh.
ENV SCIF_SHELL /bin/sh
ENV SCIF_ENTRYPOINT /bin/sh

WORKDIR "${SCIF_BASE}"

# Here we can select an exact Nix package channel, to make the container reproducible.
RUN nix-channel --add https://nixos.org/channels/nixos-18.03 nixos
RUN nix-channel --update
RUN nix-env --install --attr nixos.glibc_2_26 --attr nixos.glibcLocales --attr nixos.pipenv
RUN pipenv install --python 3.6.5 pipenv==2018.5.18 scif==0.0.73

# scif_nix.sh is for use in .scif recipes to configure Nix variables for each SCIF app.
ADD containers/scif_nix.sh .
# entrypoint.sh is a one-liner: `pipenv run scif $@`.
ADD containers/entrypoint.sh .


# Example setup of SCIF apps configured in example.scif.
ADD containers/example.scif "${SCIF_BASE}/"
RUN pipenv run scif install "${SCIF_BASE}/example.scif"

# Disable autoloading /etc/profile; will be done for each SCIF app sourcing scif_nix.sh.
ENV ENV ""
ENTRYPOINT ["./entrypoint.sh"]
